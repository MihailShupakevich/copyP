// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/handler/post_handler/posthandler.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockPostHandlerI is a mock of PostHandlerI interface.
type MockPostHandlerI struct {
	ctrl     *gomock.Controller
	recorder *MockPostHandlerIMockRecorder
}

// MockPostHandlerIMockRecorder is the mock recorder for MockPostHandlerI.
type MockPostHandlerIMockRecorder struct {
	mock *MockPostHandlerI
}

// NewMockPostHandlerI creates a new mock instance.
func NewMockPostHandlerI(ctrl *gomock.Controller) *MockPostHandlerI {
	mock := &MockPostHandlerI{ctrl: ctrl}
	mock.recorder = &MockPostHandlerIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostHandlerI) EXPECT() *MockPostHandlerIMockRecorder {
	return m.recorder
}

// CreatePost mocks base method.
func (m *MockPostHandlerI) CreatePost(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreatePost", ctx)
}

// CreatePost indicates an expected call of CreatePost.
func (mr *MockPostHandlerIMockRecorder) CreatePost(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePost", reflect.TypeOf((*MockPostHandlerI)(nil).CreatePost), ctx)
}

// DeletePost mocks base method.
func (m *MockPostHandlerI) DeletePost(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeletePost", ctx)
}

// DeletePost indicates an expected call of DeletePost.
func (mr *MockPostHandlerIMockRecorder) DeletePost(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePost", reflect.TypeOf((*MockPostHandlerI)(nil).DeletePost), ctx)
}

// GetPost mocks base method.
func (m *MockPostHandlerI) GetPost(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetPost", ctx)
}

// GetPost indicates an expected call of GetPost.
func (mr *MockPostHandlerIMockRecorder) GetPost(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPost", reflect.TypeOf((*MockPostHandlerI)(nil).GetPost), ctx)
}

// UpdatePost mocks base method.
func (m *MockPostHandlerI) UpdatePost(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdatePost", ctx)
}

// UpdatePost indicates an expected call of UpdatePost.
func (mr *MockPostHandlerIMockRecorder) UpdatePost(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePost", reflect.TypeOf((*MockPostHandlerI)(nil).UpdatePost), ctx)
}
